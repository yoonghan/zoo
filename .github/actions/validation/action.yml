# Deprecated as calling via action converge all steps into a text.
name: Validate project

runs:
  using: "composite"
  steps:
    - name: Detect package manager
      id: detect-package-manager
      run: |
        if [ -f "${{ github.workspace }}/yarn.lock" ]; then
          echo "manager=yarn" >> $GITHUB_OUTPUT
          echo "command=install" >> $GITHUB_OUTPUT
          echo "runner=yarn" >> $GITHUB_OUTPUT
          exit 0
        elif [ -f "${{ github.workspace }}/package.json" ]; then
          echo "manager=npm" >> $GITHUB_OUTPUT
          echo "command=ci" >> $GITHUB_OUTPUT
          echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          exit 0
        else
          echo "Unable to determine package manager"
          exit 1
        fi
      shell: bash
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: "20.9.0"
        cache: ${{ steps.detect-package-manager.outputs.manager }}
    - name: Restore cache
      uses: actions/cache@v4
      id: all-cache
      with:
        path: |
          .next/cache
          ~/.cache/ms-playwright
        # Generate a new cache whenever packages or source files change.
        key: ${{ runner.os }}-all-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
        # If source files changed but packages didn't, rebuild from a prior cache.
        restore-keys: |
          ${{ runner.os }}-all-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

    - name: Install dependencies
      run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      shell: bash
    - name: Install Playwright Browsers
      if: steps.all-cache.outputs.cache-hit != 'true'
      run: ${{ steps.detect-package-manager.outputs.runner }}  playwright install --with-deps chrome
      shell: bash
    - name: Build with Next.js
      run: ${{ steps.detect-package-manager.outputs.manager }} run build
      shell: bash
    - name: Run Unit test with coverage
      run: ${{ steps.detect-package-manager.outputs.manager }} run test:coverage
      shell: bash
    - name: üìÅ Code coverage report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/**/cobertura-coverage.xml
        badge: true
        format: "markdown"
        output: "both"
    - name: + Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        recreate: true
        path: code-coverage-results.md
    - name: Run E2E test
      run: ${{ steps.detect-package-manager.outputs.runner }} playwright test
      shell: bash
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: |
          playwright-report/
          coverage/
        retention-days: 30
