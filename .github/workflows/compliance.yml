name: Validate libraries used are compliant

on:
  # allow as dispatch call
  workflow_dispatch:

  workflow_call:

jobs:
  compliance:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: üõë Cancel previous runs
        uses: styfle/cancel-workflow-action@0.12.1
      - name: Checkout
        uses: actions/checkout@v5
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: "24.2.0"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Dependency checks
        run: ${{ steps.detect-package-manager.outputs.manager }} run dependency:check

      - name: License compliance check
        uses: mikaelvesavuori/license-compliance-action@v1

      # - name: Owasp Dependency Check
      #   uses: dependency-check/Dependency-Check_Action@main
      #   id: Depcheck
      #   with:
      #     project: "Zoo Negara Project"
      #     path: "./package-lock.json"
      #     format: "HTML"
      #     out: "reports" # this is the default, no need to specify unless you wish to override it
      #     args: >
      #       --failOnCVSS 7
      #       --enableRetired
      - name: Upload Dependency Check results # only uploads if it's on main
        uses: actions/upload-artifact@master
        if: github.ref == 'refs/heads/main'
        with:
          name: Compliance report
          path: ${{github.workspace}}/reports

  accessibilities:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: üõë Cancel previous runs
        uses: styfle/cancel-workflow-action@0.12.1
      - name: Checkout
        uses: actions/checkout@v5
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: "24.2.0"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: ‚ñ∂Ô∏è Start website in background
        run: |
          ${{ steps.detect-package-manager.outputs.manager }} run build 
          nohup  ${{ steps.detect-package-manager.outputs.manager }} start > npm.log 2>&1 &
          echo $! > npm.pid

      - name: ‚ñ∂Ô∏è Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v12
        continue-on-error: true
        with:
          urls: |
            http://localhost:3000
            http://localhost:3000/en/about-us
          configPath: "./lighthouserc.json"

      - name: Kill website background process
        run: |
          if [ -f npm.pid ]; then
            kill $(cat npm.pid)
            echo "Killed npm process"
          else
            echo "No PID file found"
          fi

      - name: ‚úÖ Verify status
        run: |
          file=assertion-results.json
          if grep "error" .lighthouseci/$file 1> /dev/null 2>&1; then
            echo "Required HTML syntax fixes"
            echo "---"
            cat .lighthouseci/$file
            exit 1
          fi
          ls -la .lighthouseci

      - name: ‚¨ÜÔ∏è Upload Lighthouse results
        uses: actions/upload-artifact@master
        with:
          name: Lighthouse report
          path: .lighthouseci
          include-hidden-files: true
