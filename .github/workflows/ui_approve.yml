name: Approve UI is presented correctly

on:
  workflow_dispatch:
    inputs:
      deployed_url:
        description: Deployed domain url
        default: https://zoo.walcron.com
        type: string
        required: true
  workflow_call:
    inputs:
      deployed_url:
        description: Deployed domain url
        default: https://zoo.walcron.com
        type: string
    secrets:
      PAT:
        description: Checkout secret.

jobs:
  approve:
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4
        with:
          # personal profile -> Developer Settings -> Fine Grain Token -> Actions(R)/Commit Statues(RW)/Contents(RW)/Metadata(R)
          token: ${{ secrets.PAT }}
          ref: ${{ github.head_ref }}

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Restore cache
        uses: actions/cache@v4
        id: all-cache
        with:
          path: |
            .next/cache
            ~/.cache/ms-playwright
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-all-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-all-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install Playwright Browsers
        if: steps.all-cache.outputs.cache-hit != 'true'
        run: ${{ steps.detect-package-manager.outputs.runner }}  playwright install --with-deps chromium
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.manager }} run build

      - name: ‚ñ∂Ô∏è Update Backstop Urls
        uses: ./.github/actions/backstop/rewrite
        with:
          deployed_url: ${{ inputs.deployed_url }}

      - name: ‚ñ∂Ô∏è Do a snapshot test with failure
        shell: bash
        continue-on-error: true
        run: npm run snapshot

      - name: ‚úÖ Approve all snapshots
        shell: bash
        continue-on-error: true
        run: npm run snapshot:approve

      - name: ‚úÖ Re-Validate snapshot
        shell: bash
        run: npm run snapshot

      - name: üíº Auto commit on approved snapshot
        uses: stefanzweifel/git-auto-commit-action@v4
        id: auto-commit-action
        with:
          commit_message: Update snapshot with auto approval
          file_pattern: "backstop_data/bitmaps_reference/*.png"