name: Performance validation

on:
  workflow_dispatch:
    inputs:
      deployed_url:
        description: Deployed domain url
        default: https://zoo.walcron.com
        type: string
        required: true
      continue_on_fail:
        description: Continue on fail
        default: false
        type: boolean
  workflow_call:
    inputs:
      deployed_url:
        description: Deployed domain url
        default: https://zoo.walcron.com
        type: string
      continue_on_fail:
        description: Continue on fail
        default: false
        type: boolean

jobs:
  performance:
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo without commit
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.9.0"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Restore cache
        uses: actions/cache@v4
        id: all-cache
        with:
          path: |
            .next/cache
            ~/.cache/ms-playwright
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-all-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-all-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Install Playwright Browsers
        if: steps.all-cache.outputs.cache-hit != 'true'
        run: ${{ steps.detect-package-manager.outputs.runner }}  playwright install --with-deps chrome

      - name: ✅ Performance check
        run: |
          PERFORMANCE_TEST_URL=${{ inputs.deployed_url }}
          ${{ steps.detect-package-manager.outputs.manager }} run e2e:smoke
        continue-on-error: ${{ inputs.continue_on_fail }}
